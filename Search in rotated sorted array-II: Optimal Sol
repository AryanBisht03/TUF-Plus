class Solution {
    public boolean searchInARotatedSortedArrayII(ArrayList<Integer> arr, int k) {
      int low=0;
      int n=arr.size();
      int high=n-1;
      while(low<=high)
      {
        int mid=(low+high)/2;
        if(arr.get(mid).equals(k))
        return true;
        if(arr.get(low).equals(arr.get(mid)) && arr.get(mid).equals(arr.get(high)))
        {
            low=low+1;
            high=high-1;
            continue;
        }
        if(arr.get(low)<=arr.get(mid))
        {
            if(arr.get(low)<=k && k<=arr.get(mid))
            high=mid-1;
            else
            {
                low=mid+1;
            }
        }
        else
        {
            if(arr.get(mid)<=k && k<=arr.get(high))
            {
                low=mid+1;
            }
            else
            {
                high=mid-1;
            }
        }
      }
      return false;
    }
}
